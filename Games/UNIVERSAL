-- loadstring stuff

local ARGS = {...}
local WINDOW = ARGS[1]
local NOTIFICATION = ARGS[2]

-- tabs

local UNIVERSAL_TAB = WINDOW:MakeTab({Name = "UNIVERSAL"})
local UNIVERSAL_ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/R00T66/AW/main/Scripts/KIRIOT"))()

-- locales

local UNIVERSAL_SET = {
 ["Enabled"] = false,
 ["Boxes"] = true,
 ["FaceCamera"] = true,
 ["TeamColor"] = true,
 ["Color"] = {
     R = 255, 
     G = 255, 
     B = 255
 },
 ["TeamMates"] = true,
 ["ShowHealth"] = true
}

-- services

local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

-- functions

local UNIVERSAL_SAVE = function()
   writefile("UniversalAW.lua", HttpService:JSONEncode(UNIVERSAL_SET))
   NOTIFICATION("[SUCCESS]", "WE HAVE SAVED YOUR SETTINGS! [ESP]", 5, nil)
end

local UNIVERSAL_LOAD = function()
   if isfile("UniversalAW.lua") then
      local Table = HttpService:JSONDecode(readfile("UniversalAW.lua")) 
      for i, v in pairs(Table) do
         UNIVERSAL_SET[i] = v
      end
   else
      writefile("UniversalAW.lua", HttpService:JSONEncode(UNIVERSAL_SET))
   end
end

local ColorFromHSV = function(HSV)
	local R = math.round((HSV.R * 255))
	local G = math.round((HSV.G * 255))
	local B = math.round((HSV.B * 255))

	return {R=R, G=G, B=B}
end

-- sections

local ESPSection = UNIVERSAL_TAB:AddSection({Name = tostring("esp settings"):upper()})
local SETSection = UNIVERSAL_TAB:AddSection({Name = tostring("universal settings"):upper()})

-- loading

UNIVERSAL_LOAD()

-- setup

for i, v in pairs(UNIVERSAL_SET) do
    if i ~= "Color" and i ~= "Enabled" then 
      UNIVERSAL_ESP[i] = v 
    elseif i ~= "Enabled" then
      UNIVERSAL_ESP["Color"] = Color3.fromRGB(v.R, v.G, v.B)
    else
      UNIVERSAL_ESP:Toggle(v)
   end
end

-- esp section

ESPSection:AddToggle({
  Name = tostring("enabled"):upper(),
  Default = UNIVERSAL_SET["Enabled"],
  Callback = function(Boolean)
     UNIVERSAL_SET["Enabled"] = Boolean
  end
})

ESPSection:AddToggle({
  Name = tostring("show health"):upper(),
  Default = UNIVERSAL_SET["ShowHealth"],
  Callback = function(Boolean)
     UNIVERSAL_SET["ShowHealth"] = Boolean
  end
})

ESPSection:AddToggle({
  Name = tostring("boxes"):upper(),
  Default = UNIVERSAL_SET["Boxes"],
  Callback = function(Boolean)
     UNIVERSAL_SET["Boxes"] = Boolean
  end
})

ESPSection:AddToggle({
  Name = tostring("face camera"):upper(),
  Default = UNIVERSAL_SET["FaceCamera"],
  Callback = function(Boolean)
     UNIVERSAL_SET["FaceCamera"] = Boolean
  end
})

ESPSection:AddToggle({
  Name = tostring("show team"):upper(),
  Default = UNIVERSAL_SET["TeamMates"],
  Callback = function(Boolean)
     UNIVERSAL_SET["TeamMates"] = Boolean
  end
})

ESPSection:AddToggle({
  Name = tostring("team color"):upper(),
  Default = UNIVERSAL_SET["TeamColor"],
  Callback = function(Boolean)
     UNIVERSAL_SET["TeamColor"] = Boolean
  end
})

local ColorTable = UNIVERSAL_SET["Color"]
local DefaultColor = Color3.fromRGB(ColorTable.R, ColorTable.G, ColorTable.B)

ESPSection:AddColorpicker({
  Name = tostring("color"):upper(),
  Default = DefaultColor,
  Callback = function(HSV)
     local ColorValue = ColorFromHSV(HSV)

     UNIVERSAL_SET["Color"] = {
         R = ColorValue.R, 
         G = ColorValue.G, 
         B = ColorValue.B
     }
  end 
})

-- universal settings

SETSection:AddButton({
  Name = tostring("save settings"):upper(),
  Callback = UNIVERSAL_SAVE
})

-- connections

RunService.RenderStepped:Connect(function(...)
    for i, v in pairs(UNIVERSAL_SET) do
       if i ~= "Color" and i ~= "Enabled" then 
           UNIVERSAL_ESP[i] = v 
       elseif i ~= "Enabled" then
           UNIVERSAL_ESP["Color"] = Color3.fromRGB(v.R, v.G, v.B)
       else
           UNIVERSAL_ESP:Toggle(v)
       end
    end
end) 
